49. Group Anagrams
Medium

4255

205

Add to List

Share
Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]
 

Constraints:

1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lower-case English letters.


The time complexity of the provided code is O(n * k * log(k)), where:

n is the number of strings in the input array strs.
k is the maximum length of a string in the input array.
Here's the breakdown:

The code iterates through each string in the strs array, which involves a loop over 'n' strings. This is O(n).

For each string, it sorts the characters. The sorting step takes O(k * log(k)) time, where 'k' is the length of the longest string.

Finally, it adds the sorted string to the map. This operation is O(1) on average because it involves a simple map lookup and list append.

Considering the dominant factor is the sorting operation, the overall time complexity is O(n * k * log(k)).